{"ast":null,"code":"\"use strict\";\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nvar _parseFloat = require(\"@babel/runtime-corejs2/core-js/parse-float\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.generateStyles = generateStyles;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar componentStyleFns = _interopRequireWildcard(require(\"./componentStyles\"));\n\nfunction generateStyles(theme) {\n  var rules = {}; // Programmatically generate simpler styles,\n  // which have a 1:1 token to style rule relationship\n\n  var tokenMappings = {\n    colorText: {\n      property: 'color',\n      types: ['Attention', 'Primary', 'Secondary', 'Info', 'Success', 'Warning', 'Critical', 'White']\n    },\n    colorIcon: {\n      property: 'color',\n      types: ['Attention', 'Primary', 'Secondary', 'Info', 'Success', 'Warning', 'Critical', 'White']\n    },\n    widthIcon: {\n      property: 'fontSize',\n      types: ['Small', 'Medium', 'Large'],\n      transform: _parseFloat\n    },\n    lineHeight: {\n      property: 'lineHeight',\n      types: ['Text'],\n      transform: _parseFloat\n    }\n  };\n\n  function $passThrough(input) {\n    return input;\n  }\n\n  _Object$keys(tokenMappings).forEach(function (tokenPrefix) {\n    var _tokenMappings$tokenP = tokenMappings[tokenPrefix],\n        property = _tokenMappings$tokenP.property,\n        types = _tokenMappings$tokenP.types,\n        _tokenMappings$tokenP2 = _tokenMappings$tokenP.transform,\n        transform = _tokenMappings$tokenP2 === void 0 ? $passThrough : _tokenMappings$tokenP2;\n    types.forEach(function (type) {\n      rules[\"\".concat(tokenPrefix, \"_\").concat(type).toLowerCase()] = (0, _defineProperty2.default)({}, property, transform(theme.orbit[String(tokenPrefix) + String(type)]));\n    });\n  }); // Manually generate complex styles,\n  // or styles that don't have tokens\n  // ..........................................................................\n  // GENERIC RULES.............................................................\n  // ..........................................................................\n  // text-align................................................................\n\n\n  rules.align_left = {\n    textAlign: 'left'\n  };\n  rules.align_right = {\n    textAlign: 'right'\n  };\n  rules.align_center = {\n    textAlign: 'center'\n  }; // text-transform............................................................\n\n  rules.uppercase_true = {\n    textTransform: 'uppercase'\n  };\n  rules.uppercase_false = {\n    textTransform: 'none'\n  };\n  rules.fontfamily_default = {\n    fontFamily: theme.fontFamily[theme.orbit.fontWeightNormal]\n  }; // margin....................................................................\n\n  rules.margin_none = {\n    margin: 0\n  }; // spaceAfter (aka margin-bottom)............................................\n\n  rules.spaceafter_null = {};\n  rules.spaceafter_none = {\n    marginBottom: 0\n  };\n  rules.spaceafter_smallest = {\n    marginBottom: _parseFloat(theme.orbit.spaceXXSmall)\n  };\n  rules.spaceafter_small = {\n    marginBottom: _parseFloat(theme.orbit.spaceXSmall)\n  };\n  rules.spaceafter_normal = {\n    marginBottom: _parseFloat(theme.orbit.spaceSmall)\n  };\n  rules.spaceafter_medium = {\n    marginBottom: _parseFloat(theme.orbit.spaceMedium)\n  };\n  rules.spaceafter_large = {\n    marginBottom: _parseFloat(theme.orbit.spaceLarge)\n  };\n  rules.spaceafter_largest = {\n    marginBottom: _parseFloat(theme.orbit.spaceXLarge)\n  }; // ..........................................................................\n  // COMPONENT RULES...........................................................\n  // ..........................................................................\n  // Load component specific styles ...........................................\n\n  _Object$keys(componentStyleFns).forEach(function (componentName) {\n    try {\n      var componentStyles = componentStyleFns[componentName](theme);\n\n      _Object$keys(componentStyles).forEach(function (ruleKey) {\n        if (!rules[ruleKey]) {\n          rules[ruleKey] = componentStyles[ruleKey];\n        } else {\n          console.warn(\"[generateStyles] Style rule collision with '\".concat(ruleKey, \"' from '\").concat(componentName, \"'\"));\n        }\n      });\n    } catch (e) {\n      console.warn(\"[generateStyles] Failed to import styles from '\".concat(componentName, \"'\"));\n      console.warn(e);\n    }\n  });\n\n  return _reactNative.StyleSheet.create(rules);\n}","map":{"version":3,"sources":["/private/tmp/next/with-react-native-web-app/node_modules/@kiwicom/orbit-react-native/src/styles/generateStyles.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","value","generateStyles","_defineProperty2","_reactNative","componentStyleFns","theme","rules","tokenMappings","colorText","property","types","colorIcon","widthIcon","transform","lineHeight","$passThrough","input","forEach","tokenPrefix","_tokenMappings$tokenP","_tokenMappings$tokenP2","type","concat","toLowerCase","default","orbit","String","align_left","textAlign","align_right","align_center","uppercase_true","textTransform","uppercase_false","fontfamily_default","fontFamily","fontWeightNormal","margin_none","margin","spaceafter_null","spaceafter_none","marginBottom","spaceafter_smallest","spaceXXSmall","spaceafter_small","spaceXSmall","spaceafter_normal","spaceSmall","spaceafter_medium","spaceMedium","spaceafter_large","spaceLarge","spaceafter_largest","spaceXLarge","componentName","componentStyles","ruleKey","console","warn","e","StyleSheet","create"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateStyles = generateStyles;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar componentStyleFns = _interopRequireWildcard(require(\"./componentStyles\"));\n\nfunction generateStyles(theme) {\n  var rules = {}; // Programmatically generate simpler styles,\n  // which have a 1:1 token to style rule relationship\n\n  var tokenMappings = {\n    colorText: {\n      property: 'color',\n      types: ['Attention', 'Primary', 'Secondary', 'Info', 'Success', 'Warning', 'Critical', 'White']\n    },\n    colorIcon: {\n      property: 'color',\n      types: ['Attention', 'Primary', 'Secondary', 'Info', 'Success', 'Warning', 'Critical', 'White']\n    },\n    widthIcon: {\n      property: 'fontSize',\n      types: ['Small', 'Medium', 'Large'],\n      transform: parseFloat\n    },\n    lineHeight: {\n      property: 'lineHeight',\n      types: ['Text'],\n      transform: parseFloat\n    }\n  };\n\n  function $passThrough(input) {\n    return input;\n  }\n\n  Object.keys(tokenMappings).forEach(function (tokenPrefix) {\n    var _tokenMappings$tokenP = tokenMappings[tokenPrefix],\n        property = _tokenMappings$tokenP.property,\n        types = _tokenMappings$tokenP.types,\n        _tokenMappings$tokenP2 = _tokenMappings$tokenP.transform,\n        transform = _tokenMappings$tokenP2 === void 0 ? $passThrough : _tokenMappings$tokenP2;\n    types.forEach(function (type) {\n      rules[\"\".concat(tokenPrefix, \"_\").concat(type).toLowerCase()] = (0, _defineProperty2.default)({}, property, transform(theme.orbit[String(tokenPrefix) + String(type)]));\n    });\n  }); // Manually generate complex styles,\n  // or styles that don't have tokens\n  // ..........................................................................\n  // GENERIC RULES.............................................................\n  // ..........................................................................\n  // text-align................................................................\n\n  rules.align_left = {\n    textAlign: 'left'\n  };\n  rules.align_right = {\n    textAlign: 'right'\n  };\n  rules.align_center = {\n    textAlign: 'center'\n  }; // text-transform............................................................\n\n  rules.uppercase_true = {\n    textTransform: 'uppercase'\n  };\n  rules.uppercase_false = {\n    textTransform: 'none'\n  };\n  rules.fontfamily_default = {\n    fontFamily: theme.fontFamily[theme.orbit.fontWeightNormal]\n  }; // margin....................................................................\n\n  rules.margin_none = {\n    margin: 0\n  }; // spaceAfter (aka margin-bottom)............................................\n\n  rules.spaceafter_null = {};\n  rules.spaceafter_none = {\n    marginBottom: 0\n  };\n  rules.spaceafter_smallest = {\n    marginBottom: parseFloat(theme.orbit.spaceXXSmall)\n  };\n  rules.spaceafter_small = {\n    marginBottom: parseFloat(theme.orbit.spaceXSmall)\n  };\n  rules.spaceafter_normal = {\n    marginBottom: parseFloat(theme.orbit.spaceSmall)\n  };\n  rules.spaceafter_medium = {\n    marginBottom: parseFloat(theme.orbit.spaceMedium)\n  };\n  rules.spaceafter_large = {\n    marginBottom: parseFloat(theme.orbit.spaceLarge)\n  };\n  rules.spaceafter_largest = {\n    marginBottom: parseFloat(theme.orbit.spaceXLarge)\n  }; // ..........................................................................\n  // COMPONENT RULES...........................................................\n  // ..........................................................................\n  // Load component specific styles ...........................................\n\n  Object.keys(componentStyleFns).forEach(function (componentName) {\n    try {\n      var componentStyles = componentStyleFns[componentName](theme);\n      Object.keys(componentStyles).forEach(function (ruleKey) {\n        if (!rules[ruleKey]) {\n          rules[ruleKey] = componentStyles[ruleKey];\n        } else {\n          console.warn(\"[generateStyles] Style rule collision with '\".concat(ruleKey, \"' from '\").concat(componentName, \"'\"));\n        }\n      });\n    } catch (e) {\n      console.warn(\"[generateStyles] Failed to import styles from '\".concat(componentName, \"'\"));\n      console.warn(e);\n    }\n  });\n  return _reactNative.StyleSheet.create(rules);\n}"]},"metadata":{},"sourceType":"script"}