{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.Tile = Tile;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _hooks = require(\"../common/hooks\");\n\nvar _TileHeader = _interopRequireDefault(require(\"./TileHeader/TileHeader\"));\n\nvar _Clickable = require(\"../Clickable\");\n\nvar _Text = require(\"../Text\");\n\nvar _keyMaps = _interopRequireDefault(require(\"../common/keyMaps\"));\n\nvar _styles = require(\"../styles\");\n\nvar _Expandable = require(\"../common/Expandable\");\n\nvar _testUtils = require(\"../common/testUtils\");\n\nfunction Tile(_ref) {\n  var href = _ref.href,\n      external = _ref.external,\n      icon = _ref.icon,\n      title = _ref.title,\n      description = _ref.description,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      _ref$initialExpanded = _ref.initialExpanded,\n      initialExpanded = _ref$initialExpanded === void 0 ? false : _ref$initialExpanded,\n      dataTest = _ref.dataTest;\n\n  var _React$useState = React.useState(initialExpanded),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isExpanded = _React$useState2[0],\n      setIsExpanded = _React$useState2[1];\n\n  var isExpandable = Boolean(!href && children); // Tile is expandable if - not href && children are passed\n\n  var toggleExpandable = function toggleExpandable() {\n    if (isExpandable) {\n      setIsExpanded(!isExpanded);\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    toggleExpandable();\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyPress = function handleKeyPress(ev) {\n    if ((Number(ev.keyCode) === _keyMaps.default.ENTER || Number(ev.keyCode) === _keyMaps.default.SPACE) && !href) {\n      ev.preventDefault();\n      handleClick(ev);\n    }\n  };\n\n  var _useHover = (0, _hooks.useHover)(),\n      isHovered = _useHover.isHovered,\n      hoverActions = _useHover.actions;\n\n  var ClickableComponent = href || onClick ? _Clickable.Clickable : _reactNative.View;\n  var stylesExpandableWrapper = (0, _styles.useStyles)({\n    base: 'expandableWrapper'\n  });\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: [(0, _styles.useStyles)({\n      base: 'tile'\n    }), isHovered ? styles.hovered : null]\n  }, hoverActions, (0, _testUtils.testAttribute)(dataTest)), React.createElement(ClickableComponent, {\n    href: !isExpandable ? href : undefined,\n    onClick: React.useCallback(handleClick),\n    onKeyPress: React.useCallback(handleKeyPress),\n    rel: !isExpandable && external ? 'noopener noreferrer' : undefined,\n    role: href ? undefined : 'button',\n    target: !isExpandable && external ? '_blank' : undefined,\n    tabIndex: 0\n  }, React.createElement(_TileHeader.default, {\n    icon: icon,\n    title: title,\n    description: description,\n    external: external,\n    isExpandable: isExpandable,\n    isExpanded: isExpanded\n  })), isExpandable && children && React.createElement(_Expandable.Expandable, {\n    isExpanded: isExpanded\n  }, React.createElement(_reactNative.View, {\n    style: stylesExpandableWrapper\n  }, typeof children === 'string' ? React.createElement(_Text.Text, null, children) : children)));\n}\n\nvar styles = {\n  hovered: {\n    shadowOffset: {\n      width: 10,\n      height: 6\n    }\n  }\n}; // Display name for Storybook\n\nTile.displayName = 'Tile';","map":{"version":3,"sources":["/private/tmp/next/with-react-native-web-app/node_modules/@kiwicom/orbit-react-native/src/Tile/Tile.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","value","Tile","_extends2","_slicedToArray2","React","_reactNative","_hooks","_TileHeader","_Clickable","_Text","_keyMaps","_styles","_Expandable","_testUtils","_ref","href","external","icon","title","description","children","onClick","_ref$initialExpanded","initialExpanded","dataTest","_React$useState","useState","_React$useState2","default","isExpanded","setIsExpanded","isExpandable","Boolean","toggleExpandable","handleClick","event","handleKeyPress","ev","Number","keyCode","ENTER","SPACE","preventDefault","_useHover","useHover","isHovered","hoverActions","actions","ClickableComponent","Clickable","View","stylesExpandableWrapper","useStyles","base","createElement","style","styles","hovered","testAttribute","undefined","useCallback","onKeyPress","rel","role","target","tabIndex","Expandable","Text","shadowOffset","width","height","displayName"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tile = Tile;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _hooks = require(\"../common/hooks\");\n\nvar _TileHeader = _interopRequireDefault(require(\"./TileHeader/TileHeader\"));\n\nvar _Clickable = require(\"../Clickable\");\n\nvar _Text = require(\"../Text\");\n\nvar _keyMaps = _interopRequireDefault(require(\"../common/keyMaps\"));\n\nvar _styles = require(\"../styles\");\n\nvar _Expandable = require(\"../common/Expandable\");\n\nvar _testUtils = require(\"../common/testUtils\");\n\nfunction Tile(_ref) {\n  var href = _ref.href,\n      external = _ref.external,\n      icon = _ref.icon,\n      title = _ref.title,\n      description = _ref.description,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      _ref$initialExpanded = _ref.initialExpanded,\n      initialExpanded = _ref$initialExpanded === void 0 ? false : _ref$initialExpanded,\n      dataTest = _ref.dataTest;\n\n  var _React$useState = React.useState(initialExpanded),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isExpanded = _React$useState2[0],\n      setIsExpanded = _React$useState2[1];\n\n  var isExpandable = Boolean(!href && children); // Tile is expandable if - not href && children are passed\n\n  var toggleExpandable = function toggleExpandable() {\n    if (isExpandable) {\n      setIsExpanded(!isExpanded);\n    }\n  };\n\n  var handleClick = function handleClick(event) {\n    toggleExpandable();\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyPress = function handleKeyPress(ev) {\n    if ((Number(ev.keyCode) === _keyMaps.default.ENTER || Number(ev.keyCode) === _keyMaps.default.SPACE) && !href) {\n      ev.preventDefault();\n      handleClick(ev);\n    }\n  };\n\n  var _useHover = (0, _hooks.useHover)(),\n      isHovered = _useHover.isHovered,\n      hoverActions = _useHover.actions;\n\n  var ClickableComponent = href || onClick ? _Clickable.Clickable : _reactNative.View;\n  var stylesExpandableWrapper = (0, _styles.useStyles)({\n    base: 'expandableWrapper'\n  });\n  return React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: [(0, _styles.useStyles)({\n      base: 'tile'\n    }), isHovered ? styles.hovered : null]\n  }, hoverActions, (0, _testUtils.testAttribute)(dataTest)), React.createElement(ClickableComponent, {\n    href: !isExpandable ? href : undefined,\n    onClick: React.useCallback(handleClick),\n    onKeyPress: React.useCallback(handleKeyPress),\n    rel: !isExpandable && external ? 'noopener noreferrer' : undefined,\n    role: href ? undefined : 'button',\n    target: !isExpandable && external ? '_blank' : undefined,\n    tabIndex: 0\n  }, React.createElement(_TileHeader.default, {\n    icon: icon,\n    title: title,\n    description: description,\n    external: external,\n    isExpandable: isExpandable,\n    isExpanded: isExpanded\n  })), isExpandable && children && React.createElement(_Expandable.Expandable, {\n    isExpanded: isExpanded\n  }, React.createElement(_reactNative.View, {\n    style: stylesExpandableWrapper\n  }, typeof children === 'string' ? React.createElement(_Text.Text, null, children) : children)));\n}\n\nvar styles = {\n  hovered: {\n    shadowOffset: {\n      width: 10,\n      height: 6\n    }\n  }\n}; // Display name for Storybook\n\nTile.displayName = 'Tile';"]},"metadata":{},"sourceType":"script"}