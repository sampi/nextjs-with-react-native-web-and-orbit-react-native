// @flow

// @TODO rewite to inline object styles

import { Platform } from 'react-native';

import type { themeType } from '../ThemeProvider/defaultTheme';
import type { styleSheetType } from '../styles/styleTypes';
import { mapPaddingTokensToStyles, generateButtonTypesStyles } from './utils';

const webPlatformStyles = Platform.select({
  web: {
    display: 'flex',
    textDecorationLine: 'none',
    outlineStyle: 'none',
    borderStyle: 'none',
    margin: 0,
    padding: 0 } });



export default function generateTextStyles(theme: themeType): styleSheetType {
  return {
    base_button: {
      position: 'relative',
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',

      height: parseFloat(theme.orbit.heightButtonNormal),
      borderRadius: parseFloat(theme.orbit.borderRadiusNormal),
      backgroundColor: theme.orbit.backgroundButtonPrimary,
      ...webPlatformStyles },


    base_buttontext: {
      color: theme.orbit.colorTextButtonPrimary,
      fontFamily: theme.fontFamily[theme.orbit.fontWeightBold],
      fontSize: parseFloat(theme.orbit.fontSizeButtonNormal) },


    fontSizeButtonNormal: {
      fontSize: parseFloat(theme.orbit.fontSizeButtonNormal) },


    // disabled
    disabled_true: { opacity: parseFloat(theme.orbit.opacityButtonDisabled), borderWidth: 0 },

    // size
    'button-size_large': {
      height: parseFloat(theme.orbit.heightButtonLarge) },


    'button-size_normal': {
      height: parseFloat(theme.orbit.heightButtonNormal) },


    'button-size_small': {
      height: parseFloat(theme.orbit.heightButtonSmall) },


    'text-size_large': {
      fontSize: parseFloat(theme.orbit.fontSizeButtonLarge) },

    'text-size_small': {
      fontSize: parseFloat(theme.orbit.fontSizeButtonSmall) },


    'text-size_normal': {
      fontSize: parseFloat(theme.orbit.fontSizeButtonNormal) },


    // circled
    circled_normal: {
      borderRadius: parseFloat(theme.orbit.heightButtonNormal) },


    circled_small: {
      borderRadius: parseFloat(theme.orbit.heightButtonSmall) },


    circled_large: {
      borderRadius: parseFloat(theme.orbit.heightButtonLarge) },


    fullwidth_true: {
      width: '100%' },


    // primary type
    ...generateButtonTypesStyles('primary', theme),

    // secondary type
    ...generateButtonTypesStyles('secondary', theme),

    // info type
    ...generateButtonTypesStyles('info', theme),

    // success type
    ...generateButtonTypesStyles('success', theme),

    // warning type
    ...generateButtonTypesStyles('warning', theme),

    // critical type
    ...generateButtonTypesStyles('critical', theme),

    // google type
    ...generateButtonTypesStyles('google', theme),

    // facebook type
    ...generateButtonTypesStyles('facebook', theme),

    // white type
    ...generateButtonTypesStyles('white', theme),

    // rewrite generated styles for white types
    'type_white-bordered': {
      backgroundColor: theme.orbit.backgroundButtonWhiteBordered },


    'hovered_white-bordered-true': {
      backgroundColor: theme.orbit.backgroundButtonWhiteBorderedHover },


    // Button styles without icons
    'button-container_small': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonSmall) },


    'button-container_normal': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonNormal) },


    'button-container_large': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonLarge) },


    // Button styles with the left icon
    'button-container_iconleft-small': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonSmallWithLeftIcon) },


    'button-container_iconleft-normal': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonNormalWithLeftIcon) },


    'button-container_iconleft-large': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonLargeWithLeftIcon) },


    // Button styles with the right icon
    'button-container_iconright-small': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonSmallWithRightIcon) },


    'button-container_iconright-normal': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonNormalWithRightIcon) },


    'button-container_iconright-large': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonLargeWithRightIcon) },


    // Button styles with both icons
    'button-container_icons-large': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonLargeWithIcons) },


    'button-container_icons-normal': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonNormalWithIcons) },


    'button-container_icons-small': {
      ...mapPaddingTokensToStyles(theme.orbit.paddingButtonSmallWithIcons) },


    // Button styles with icons and without children
    'button-container_onlyicon-large': {
      width: parseFloat(theme.orbit.heightButtonLarge) },


    'button-container_onlyicon-normal': {
      width: parseFloat(theme.orbit.heightButtonNormal) },


    'button-container_onlyicon-small': {
      width: parseFloat(theme.orbit.heightButtonSmall) } };


}