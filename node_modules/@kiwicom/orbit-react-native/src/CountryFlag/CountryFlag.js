"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCountry = getCountry;
exports.CountryFlag = CountryFlag;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _styles = require("../styles");

var _CountryFlag = require("./CountryFlag.consts");

var _Image = require("../Image");

var _testUtils = require("../common/testUtils");

function getCountry(code) {
  var codeNormalized = code ? code.toLowerCase() : 'anywhere';

  var countryCodeExists = _CountryFlag.CODES.includes(codeNormalized); // @TODO add warning "Country code not supported" (as described here: https://github.com/kiwicom/orbit-components/blob/master/src/CountryFlag/index.js)


  var countryCode = countryCodeExists ? codeNormalized : 'anywhere';
  return countryCode;
}

function CountryFlag(_ref) {
  var dataTest = _ref.dataTest,
      code = _ref.code,
      name = _ref.name;
  var country = getCountry(code);
  return _react.default.createElement(_reactNative.View, {
    style: (0, _styles.useStyles)({
      base: 'container'
    })
  }, _react.default.createElement(_Image.Image, (0, _extends2.default)({
    title: name,
    alt: name,
    source: {
      '1': "".concat(_CountryFlag.baseURL, "/flags/24x0/flag-").concat(country, ".jpg"),
      '2': "".concat(_CountryFlag.baseURL, "/flags/48x0/flag-").concat(country, ".jpg")
    },
    style: (0, _styles.useStyles)({
      base: 'image'
    })
  }, (0, _testUtils.testAttribute)(dataTest))), _react.default.createElement(_reactNative.View, {
    style: (0, _styles.useStyles)({
      base: 'shadow'
    })
  }));
} // Display name for Storybook


CountryFlag.displayName = 'CountryFlag';