// @flow

import React from 'react';
import type { Node as ReactNode } from 'react';
import { Text as RNText, Platform } from 'react-native';

import { useStyles } from '../styles';
import { testAttribute } from '../common/testUtils';
import type { spaceAfterType } from '../styles';
import type { headingType } from './Heading.types';

type Props = {|
  type?: headingType,
  inverted?: boolean,
  spaceAfter?: spaceAfterType,
  dataTest?: string,
  children?: ReactNode,
  as?: 'div' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5',
  id?: string, |};


// @TODO dataA11ySection once we have <SkipNavigation>
export function Heading({
  type = 'title1',
  inverted = false,
  spaceAfter = 'none',
  as = 'h1',
  id,
  dataTest,
  children }
: Props) {
  const styles = useStyles({
    base: 'heading',
    headingType: type,
    inverted,
    spaceAfter });

  const nextProps = {
    style: styles,
    nativeID: id,
    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header',
    'aria-level': '1',
    ...testAttribute(dataTest) };

  if (as !== 'div') {
    switch (as) {
      case 'h5':
        nextProps['aria-level'] = '5';
        break;
      case 'h4':
        nextProps['aria-level'] = '4';
        break;
      case 'h3':
        nextProps['aria-level'] = '3';
        break;
      case 'h2':
        nextProps['aria-level'] = '2';
        break;
      case 'h1':
        nextProps['aria-level'] = '1';
        break;
      default:
        (as: empty);}

  } else {
    nextProps.accessibilityRole = '';
    nextProps['aria-level'] = '';
  }

  return <RNText {...nextProps}>{children}</RNText>;
}

// Display name for Storybook
Heading.displayName = 'Heading';