// @flow strict

const ucCase = require('../../common/utils').ucCase;


type IconListType = {
  [string]: {
    description: string,
    category: string,
    character: string,
    svg: string, ...}, ...};






module.exports = {
  output: 'src/Icon/icons.types.generated.js',
  input: 'static/icons.json',
  generate: function generateIconTypesAndNames(
  iconList: IconListType,
  HEADER: string)
  {
    const icons = {};
    Object.keys(iconList).forEach(function (iconName) {
      icons[iconName] = iconList[iconName].character;
    });
    return `// @flow

${HEADER}

import type { StatelessFunctionalComponent as ReactStatelessFunctionalComponent } from 'react';

import type { NamedIconProps } from './Icon.types';

export type iconDashType =
  | '${Object.keys(iconList).join("'\n  | '")}';

export type iconUCType =
  | '${Object.keys(iconList).
    map(ucCase).
    join("'\n  | '")}';

export type iconsType = {
  ${Object.keys(iconList).
    map(ucCase).
    join(
    ': ReactStatelessFunctionalComponent<NamedIconProps>,\n  ')
    }: ReactStatelessFunctionalComponent<NamedIconProps>,
  ...
};
`;
  } };