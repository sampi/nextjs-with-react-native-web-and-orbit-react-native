// @flow

import React from 'react';

import type { IllustrationProps } from './Illustration.types';
import { useStyles } from '../styles';
import { Image } from '../Image';
import { baseURL } from './Illustration.consts';
import { testAttribute } from '../common/testUtils';
import getIllustration from './utils/getIllustration';
import ThemeContext from '../ThemeProvider/ThemeContext';

function getIllustrationURL(name, height, heightMultiplier) {
  return `${baseURL}/illustrations/0x${height * heightMultiplier}/${name}.png`;
}

function getHeightToken({ theme, size }) {
  const tokens = {
    small: theme.orbit.heightIllustrationSmall,
    medium: theme.orbit.heightIllustrationMedium };

  return size && tokens[size];
}
export function Illustration({
  dataTest,
  size = 'medium',
  spaceAfter = 'none',
  name }
: IllustrationProps) {
  const styles = useStyles({ spaceAfter, size, base: 'illustration' });
  const [theme] = React.useContext(ThemeContext);

  const height = parseInt(getHeightToken({ theme, size }), 10);
  return (
    <Image
    nativeSource={getIllustration(name) ?? undefined}
    webSource={{
      '1': getIllustrationURL(name, height, 1),
      '2': getIllustrationURL(name, height, 2) }}

    style={styles}
    {...testAttribute(dataTest)} />);


}

// Display name for Storybook
Illustration.displayName = 'Illustration';