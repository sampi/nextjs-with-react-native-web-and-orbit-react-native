"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHoverEnabled = isHoverEnabled;

/* eslint-disable no-undef */
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
var isEnabled = false;

if (canUseDOM) {
  var enableHover = function enableHover() {
    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {
      return;
    }

    isEnabled = true;
  };

  var disableHover = function disableHover() {
    lastTouchTimestamp = Date.now();

    if (isEnabled) {
      isEnabled = false;
    }
  };

  /**
   * Web browsers emulate mouse events (and hover states) after touch events.
   * This code infers when the currently-in-use modality supports hover
   * (including for multi-modality devices) and considers "hover" to be enabled
   * if a mouse movement occurs more than 1 second after the last touch event.
   * This threshold is long enough to account for longer delays between the
   * browser firing touch and mouse events on low-powered devices.
   */
  var HOVER_THRESHOLD_MS = 1000;
  var lastTouchTimestamp = 0;
  document.addEventListener('touchstart', disableHover, true);
  document.addEventListener('touchmove', disableHover, true);
  document.addEventListener('mousemove', enableHover, true);
}

function isHoverEnabled() {
  return isEnabled;
}