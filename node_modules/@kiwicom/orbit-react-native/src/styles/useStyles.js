"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useStyles = useStyles;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _StyleContext = require("./StyleContext");

function tokenToStyleKey(property) {
  var usageAndType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  return "".concat(property, "_").concat(String(usageAndType)).toLowerCase();
}

function mapPropsToComponentStyles(props, styles) {
  return Object.keys(props).reduce(function (acc, prop) {
    var styleKey = tokenToStyleKey(prop, props[prop]);
    var style = styles[styleKey];

    if (style) {
      acc.push(style);
    } else {
      console.warn("[useStyles] Style rule not found: '".concat(styleKey, "'"));
    }

    return acc;
  }, []);
}

function createCustomStyles(customStyles) {
  return _reactNative.StyleSheet.create({
    customStyles: customStyles
  });
}

function getCustomComponentStyles(customStyles) {
  return customStyles ? createCustomStyles(customStyles).customStyles : [];
}

function useStyles(props, customStyles) {
  var styles = _react.default.useContext(_StyleContext.StyleContext);

  return [].concat( // Map styles based on props
  mapPropsToComponentStyles(props, styles), // Custom styles that won't work with pregenerated rules (eg: customColor)
  getCustomComponentStyles(customStyles));
}